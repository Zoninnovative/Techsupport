@model Ticketing_System.Core.CreateTaskDTO
@{
}
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/PageLevel Scripts/Tasks.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>

<div id="page-wrapper">
    <div class="col-lg-12">
        <h5 class="pull-right"> Dashboard - > Tickets ->Create Ticket</h5>
    </div>
    <script src="~/Scripts/validation.js"></script>
    <script src="~/Scripts/Validations.js"></script>
    <div class="row">
        <div class="col-lg-12">

            @using (Html.BeginForm("Create", "Tickets", FormMethod.Post, new { enctype="multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Create New Ticket</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Description, 6, 47, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">Project</label>
                            @*@Html.LabelFor(model => model.ProjectID, htmlAttributes: new { @class = "control-label col-md-3" })*@
                            <div class="col-md-9">
                                @* @Html.DropDownListFor(model => model.ProjectID,Model.ProjectsDDL, new { @class = "form-control" })*@
                                @Html.DropDownListFor(m => m.ProjectID, (IEnumerable<SelectListItem>)Model.ProjectsDDL, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">Assigned To</label>
                            @*@Html.LabelFor(model => model.AssignedTo, htmlAttributes: new { @class = "control-label col-md-3" })*@
                            <div class="col-md-9">
                                @Html.DropDownListFor(m => m.AssignedTo, (IEnumerable<SelectListItem>)Model.AssignTODDL, new { @class = "form-control" })
                                @*  @Html.DropDownListFor(model => model.AssignedTo,  Model.AssignTODDL, new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Reffered To</label>
                            @*@Html.LabelFor(model => model.RefereedTo, htmlAttributes: new { @class = "control-label col-md-3" })*@
                            <div class="col-md-9">
                                @Html.DropDownListFor(m => m.RefereedTo, (IEnumerable<SelectListItem>)Model.RefereerToDDL, new { @class = "form-control" })
                                @*   @Html.DropDownListFor(model => model.RefereedTo,  Model.RefereerToDDL, new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.RefereedTo, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label col-md-3">Due Date</label>
                            @*@Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-3" })*@
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.DueDate, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Assigned Date</label>
                            @*@Html.LabelFor(model => model.AssigndedDate, htmlAttributes: new { @class = "control-label col-md-3" })*@
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.AssigndedDate, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AssigndedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Priority</label>
                            @*@Html.LabelFor(model => model.PriorityDDL, htmlAttributes: new { @class = "control-label col-md-3" })*@
                            <div class="col-md-9">
                                @Html.DropDownListFor(m => m.PriorityID, (IEnumerable<SelectListItem>)Model.PriorityDDL, new { @class = "form-control" })
                                @*   @Html.DropDownListFor(model => model.PriorityDDL,  Model.PriorityDDL, new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.PriorityDDL, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">Task Status</label>
                            @*@Html.LabelFor(model => model.Task_Status, htmlAttributes: new { @class = "control-label col-md-3" })*@
                            <div class="col-md-9">
                                @Html.DropDownListFor(m => m.Task_Status, (IEnumerable<SelectListItem>)Model.TaskStatusDDl, new { @class = "form-control" })
                                @*   @Html.DropDownListFor(model => model.PriorityDDL,  Model.PriorityDDL, new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.Task_Status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">Task Type</label>
                            @*@Html.LabelFor(model => model.TypeID, htmlAttributes: new { @class = "control-label col-md-3" })*@
                            <div class="col-md-9">
                                @Html.DropDownListFor(m => m.TypeID, (IEnumerable<SelectListItem>)Model.TypeDDL, new { @class = "form-control" })
                                @*  @Html.DropDownListFor(model => model.TypeDDL, Model.TypeDDL, new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.TypeDDL, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">Upload screenshots</label>
                            @*@Html.LabelFor(model => model.Task_Status, htmlAttributes: new { @class = "control-label col-md-3" })*@
                            <div class="col-md-9" id="appendFileUpload">
                                <div class="row fileUploader" id="fileUploader">
                                    <div class="col-md-10">
                                        <input type="file" name="fileUpload" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <button type="button" id="addFileUpload" class="btn btn-sm btn-default pull-right"><i class="fa fa-plus"></i></button>
                            </div>
                        </div>
                        

                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-9">
                                <input type="submit" value="Create" class="btn btn-info btn-block" />
                                @if (ViewBag.Message != null)
                                {
                                    <label class="text-info">@ViewBag.Message</label>
                                }
                            </div>
                        </div>

                        
                    </div>


                </div>
            }

        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        $('#DueDate,#AssigndedDate').datepicker({
            format: "mm/dd/yyyy"
        });

        
    });
</script>